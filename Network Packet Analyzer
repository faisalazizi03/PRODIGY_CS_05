from scapy.all import sniff

def packet_callback(packet):
    # Display basic packet information
    if packet.haslayer('IP'):
        ip_layer = packet['IP']
        print(f"Source IP: {ip_layer.src}, Destination IP: {ip_layer.dst}, Protocol: {ip_layer.proto}")
        
        # If the packet has a payload, display it
        if packet.haslayer('Raw'):
            payload = packet['Raw'].load
            print(f"Payload: {payload}")

def start_sniffer(interface=None):
    print("Starting packet sniffer...")
    # Start sniffing packets
    sniff(iface=interface, prn=packet_callback, store=0)

if __name__ == "__main__":
    # Optionally specify the network interface (e.g., 'eth0', 'wlan0')
    network_interface = None  # Use None to sniff on all interfaces
    start_sniffer(network_interface)
